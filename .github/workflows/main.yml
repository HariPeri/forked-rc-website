name: Hugo Build CI

on:
  push:
    branches:
    - 'main'
    - 'master'
    - 'staging'
  schedule:
    - cron: '0 8 * * *'
  workflow_dispatch:

jobs:
  Build:
    runs-on: ubuntu-latest
    steps:
    - uses: nelonoel/branch-name@v1
      env:
        ACTIONS_ALLOW_UNSECURE_COMMANDS: true
    - run: echo ${BRANCH_NAME}
    - name: Set ENV vars
      env:
        BUCKET_NAME: ${{ secrets.BUCKET_NAME }}
        BUCKET_NAME_STAGING: ${{ secrets.BUCKET_NAME_STAGING }}
        DISTRIBUTION_ID: ${{ secrets.DISTRIBUTION_ID }}
        STAGING_DISTRIBUTION_ID: ${{ secrets.STAGING_DISTRIBUTION_ID }}
        MAX_AGE: ${{ secrets.MAX_AGE }}
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      run: echo $BUCKET_NAME
    - name: Get HUGO container
      run: docker pull ghcr.io/uvarc/hugo-build:v2
    - name: Run HUGO container
      run: docker run -e BRANCH=$BRANCH_NAME -e TRAVIS_BRANCH=$BRANCH_NAME -e BUCKET_NAME=${{ secrets.BUCKET_NAME }} -e DISTRIBUTION_ID=${{ secrets.DISTRIBUTION_ID }} -e BUCKET_NAME_STAGING=${{ secrets.BUCKET_NAME_STAGING }} -e STAGING_DISTRIBUTION_ID=${{ secrets.STAGING_DISTRIBUTION_ID }} -e AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }} -e AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }} -e MAX_AGE=${{ secrets.MAX_AGE}} ghcr.io/uvarc/hugo-build:v2 /root/build-site.sh uvarc/rc-website hugo-0.80.0-ext
  # Broken Link Checker using Broken Link Checker Action provided by technote-space
  Broken_Link_Checker:
    name: Broken Link Check
    runs-on: ubuntu-latest
    needs: Build
    steps:
      - name: Run Broken Link Checker
        uses: ruzickap/action-my-broken-link-checker@v2
        with:
          url: https://staging.rc.virginia.edu
          cmd_params: "-e rci.hpc -e rci.hpc -e stats.pingdom -e fastx.hpc -e groups -e ansys -e innovation.lab -e tags -e https://www.howtogeek.com/107808/how-to-manage-files-from-the-linux-terminal-11-commands-you-need-to-know/ -e https://uvarc.io/support -e http://uvasinklab.org/ -e http://druzgallab.com -e https://www.knime.com/community/image-processing --buffer-size=8192 --max-connections=10 --accepted-status-codes=200,403,999 --skip-tls-verification --timeout=20"
    
  Slack:
    name: Error Notification
    if: ${{ failure() }}
    needs: Build
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Slack Notification
      uses: rtCamp/action-slack-notify@v2
      env:
        SLACK_CHANNEL: website
        SLACK_COLOR: '#3278BD'
        SLACK_ICON: https://staging.rc.virginia.edu/images/logos/github-icon-48px.png
        SLACK_TITLE: ERROR - GitHub CI
        SLACK_MESSAGE: 'Build Error :boom:'
        SLACK_USERNAME: ci-bot
        SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
  Slack2:
    name: Build Notification
    if: ${{ success() }}
    needs: Build
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Slack Notification
      uses: rtCamp/action-slack-notify@v2
      env:
        SLACK_CHANNEL: dev
        SLACK_COLOR: '#3278BD'
        SLACK_ICON: https://ca.slack-edge.com/T3NTLDW3S-U01TZJS6EJ3-c35d057d96f4-72
        SLACK_TITLE: Build SUCCESS - GitHub CI
        SLACK_MESSAGE: ':ballot_box_with_check: Successful build of the ${{ github.ref }} branch of the RC website.'
        SLACK_USERNAME: Success Bot
        SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
